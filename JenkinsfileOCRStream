pipeline {
    agent any
    environment { 
        ECR_REPO    = "${env.ENV}-${env.TEAM}-${env.TF_ECR_KINESIS_OCR}"
        IMAGE_TAG   = "${env.BUILD_NUMBER}"
        KINESIS_OCR_DATA_STREAM = "${env.ENV}-${env.TEAM}-${env.TF_KINESIS_DATA_STREAM_OCR}"
    }
    
    stages { 
        stage('Configuration') {
            steps {
			
            	echo "Updating Configs"
                sh "sed -i 's@<API_GATEWAY_KINESIS>@$TF_API_GATEWATY_URL_KINESIS@g' app/kinesis_consumer/ocr_config.py"
                sh "sed -i 's@<KINESIS_OCR_DATA_STREAM>@$KINESIS_OCR_DATA_STREAM@g' app/kinesis_consumer/ocr_config.py"
                sh "sed -i 's@<OCR_HOSTNAME>@$MICROSERVICE_HOSTNAME_OCR@g' app/kinesis_consumer/ocr_config.py"
                sh "sed -i 's@<OCR_PORT>@$MICROSERVICE_PORT_OCR@g' app/kinesis_consumer/ocr_config.py"
                sh "cat app/kinesis_consumer/ocr_config.py"
                
            }
        }
        stage('Build') {
            steps {
                echo "Building Docker"
                sh 'ECR=$(aws ecr get-login --no-include-email --region $AWS_REGION) && $ECR'
                sh 'docker build -t $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG -f DockerfileOCRStream .'
                sh 'docker push $AWS_ACCOUNT.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:$IMAGE_TAG'
            }
        }
                
        stage('Deploy') {
            steps {
            	echo "Deploying"
                sh "sed -i 's@<ACCOUNT>@$AWS_ACCOUNT@g' kubernetes_scripts/kinesis-microservice-ocr-stream-deployment.yaml"
                sh "sed -i 's@<REGION>@$AWS_REGION@g' kubernetes_scripts/kinesis-microservice-ocr-stream-deployment.yaml"
                sh "sed -i 's@<REPO>@$ECR_REPO@g' kubernetes_scripts/kinesis-microservice-ocr-stream-deployment.yaml"
                sh "sed -i 's@<TAG>@$IMAGE_TAG@g' kubernetes_scripts/kinesis-microservice-ocr-stream-deployment.yaml"
                sh 'kubectl apply -f kubernetes_scripts/kinesis-microservice-ocr-stream-deployment.yaml -n $ENV'          }
        }
    }
}
